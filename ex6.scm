(define (rand m)
  (let ((x random-init))
    (define (generate)
      (set! x (rand-update x))
      x)
    (define (reset)
      (lambda (new-value)
        (set! x new-value)))
    (cond ((eq? m `generate) generate)
          ((eq? m `reset) reset)
          (else (error "invalid method!!!!"))
          )
      )
)

(rand `generate)
(rand `generate)
(rand `generate)
(rand `generate)
(rand `generate)
((rand `reset) 10)
(rand `generate)
(rand `generate)
(rand `generate)
(rand `generate)

;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
;(rand `generate)
